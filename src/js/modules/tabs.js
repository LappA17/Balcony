const tabs = (headerSelector, tabSelector, contentSelector, activeClass) => {
/* headerSelector - шапка где все табы
   tabSelector - селектор каждого отдельного таба 
   content - */

/* Видим на странице что у нас есть таб хеддер, где есть все табы 

    Здесь будем использовать деллигирование события, то-есть вешаем обработчик событий на целый блок хеддер, 
а дальше отслеживае куда кликнул пользователь. Потом взависимости куда кликнул пользователь мы определяем
его индекс(то-есть номер по порядку)
    Дальше нам необходимо что бы подсвечивалась надпись таба на которую кликает пользователь, по-этому
нужно будет добавлять и убирать класс который отвечает за подсветку*/
    
    const header = document.querySelector(headerSelector),
          tab = document.querySelectorAll(tabSelector),
          content = document.querySelectorAll(contentSelector);

/*Говоря о табах нам необходимо скрыть все не нужные элементы и показывать только тот что нас сейчас интересует */
function hideTabContent(){ /* у этой функии будет применение что мы берем content - здесь лежит html коллекция в 
    которой лежат все файлы под определенном селектором contentSelector*/
    
    content.forEach(item =>{
        item.style.display = "none";
    }); //скрываем весь контент прямо сейчас который вообще есть на странице

    /*теперь меняем класс активности у табов после клика */
    tab.forEach(item =>{
        item.classList.remove(activeClass);
    });
    
}

function showTabContent(i = 0){ /*эта функция будет показывать определенный контент по этому передаем аргумент i
    и этот аргумент будем получать после того как наш код отследит на какой таб по счету нажал пользователь
    content - это псевдо массив, по-этому прописыаем [i] что бы обратиться по индексу */

    content[i].style.display = "block";/* ЕСЛИ У МЕНЯ БУДУТ НЕ БЛОЧНЫЕ ЭЛЕМЕНТЫ А ФЛЕКСОВЫЕ ТО ЧТО БЫ 
    НЕ ПОЕХАЛА ВЕРСТКА МОЖНО СОЗДАТЬ АРГУМЕНТ У ГЛАВНОЙ ФУНКЦИИ И ТУДА ЗАДАВАТЬ НУЖНЫЕ ЗНАЧЕНИЯ  */

    tab[i].classList.add(activeClass);
}
/* Две эти функции готовы и нам нужно вызвать их в самом начале, потому что когда пользователь заходит в табы
у него будет очень много контента и они пока что скрыты с помощью css , но бывает что такого нет или что-то пошло
не так. И что бы все нормально работало - просто вызваем эти функции сразу */
hideTabContent();
showTabContent(); /*передаем 0 что бы хотя бы первый таб показывался пользователю на страничке или можно
так же добавить i = 0 что бы у него был параметр по умолчанию и теперь можно запускать фцию без аргументов*/

/* теперь нужно отследить какой таб кликнул пользователь */

header.addEventListener("click", (e) =>{ /*сразу объект событие. мы будем много использовать е-таргет, по этому 
    сразу помустим его в переменную*/
    const target = e.target; //тот элемент куда кликнул пользователь
    if(/*иногда бывают элементы которые вообще не поддерживают события клика и там нам необходимо проверять этот
        самый таргет. То-есть мы проверямем или вообще есть target и одно из нижних условий*/ 
        target &&
        (target.classList.contains(tabSelector.replace(/\./, "")) ||
     target.parentNode.classList.contains(tabSelector.replace(/\./, "")))){/* помни что между табами могут
             быть пробелы и пользователь может кликнуть мимо того дива где находится таб, по-этому нужно точно
              быть уверенным что пользователь кликнул именно на таб, поэтому
        
target.classList.contains(tabSelector - проверяем или то место куда кликнул пользователь содержит в себе опредленный
класс. Но classList работает только с классами, а табСелектор не имеет точки, по этому нам нужно вручную
ему поставить точку с помощью replace так как это СТРОКА  

И еще очень важно, пользователь так же может кликнуть не только в сам элемент но и в его дочерний, поэтому 
добавляем  еще parentNode с лог опператором*/

/*теперь нужно определить в какой именно элемент по счету мы кликнули */
    tab.forEach((item, i) => {
        if(target == item || target.parentNode == item) { /*target == item если тот элемент куда кликнул пользователь будет равен тому item который 
сейчас перебирается в цикле фор ич или родитель, то мы берем и используем этот индекс который нам пришел от i */
            hideTabContent();
            showTabContent(i);/*во внутрь передаем аргумент который нам пришел из колбек функции фор ич */

        }
    });
    }
});
/* Мы сначало навешиваем обработчик событий на оббщую область которая объединяет все табы = header, 
Дальше мы проверяем что мы действительно кликнули в один из табов if(target ... 
Дальше когды мы удоствоерились что мы кликнули в один из табов - мы начинаем перевирять его один за другим при чем мы запоминаем 
не только тот там что мы перебираем а его номер по порядку = tab.forEach
Как только только мы проверили что таб по которому кликнул пользователь равен тому табу что сейчас перебирается if(target == item 
то мы запомниаем i - его индекс и прямо здесь начинаем использовать его при помощи тех функций что мы описали. То-есть: мы кликнули
на 3 таб, скрипт удостоверился что мы действительно кликнули на него if(target == item, взял циферку два так как табы с 0 и подставил
2 в showTabContent() вместо i . 
Это значит что у нас 3 элемент показывается здесь content[i].style.display = "block" и третьему табу назначается класс активности*/



};
export default tabs;